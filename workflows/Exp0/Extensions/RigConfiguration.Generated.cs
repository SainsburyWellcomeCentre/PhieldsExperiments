//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace RigConfiguration
{
    #pragma warning disable // Disable all warnings

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class LoomTrigger
    {
    
        private LoomAction _trigger;
    
        public LoomTrigger()
        {
        }
    
        protected LoomTrigger(LoomTrigger other)
        {
            _trigger = other._trigger;
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="trigger")]
        public LoomAction Trigger
        {
            get
            {
                return _trigger;
            }
            set
            {
                _trigger = value;
            }
        }
    
        public System.IObservable<LoomTrigger> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new LoomTrigger(this)));
        }
    
        public System.IObservable<LoomTrigger> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new LoomTrigger(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("trigger = " + _trigger);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    public enum ClockSynchronizerName
    {
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="TimestampGeneratorGen3")]
        TimestampGeneratorGen3 = 0,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="ClockSynchronizer")]
        ClockSynchronizer = 1,
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    public enum CameraControllerName
    {
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Behavior")]
        Behavior = 0,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="CameraControllerGen2")]
        CameraControllerGen2 = 1,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="OutputExpander")]
        OutputExpander = 2,
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    public enum CameraTriggerName
    {
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Trigger0")]
        Trigger0 = 0,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Trigger1")]
        Trigger1 = 1,
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class CameraTriggerSource
    {
    
        private CameraTriggerName _triggerName = RigConfiguration.CameraTriggerName.Trigger0;
    
        private int _triggerFrequency = 50;
    
        public CameraTriggerSource()
        {
        }
    
        protected CameraTriggerSource(CameraTriggerSource other)
        {
            _triggerName = other._triggerName;
            _triggerFrequency = other._triggerFrequency;
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="TriggerName")]
        public CameraTriggerName TriggerName
        {
            get
            {
                return _triggerName;
            }
            set
            {
                _triggerName = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="triggerFrequency")]
        public int TriggerFrequency
        {
            get
            {
                return _triggerFrequency;
            }
            set
            {
                _triggerFrequency = value;
            }
        }
    
        public System.IObservable<CameraTriggerSource> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new CameraTriggerSource(this)));
        }
    
        public System.IObservable<CameraTriggerSource> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new CameraTriggerSource(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("TriggerName = " + _triggerName + ", ");
            stringBuilder.Append("triggerFrequency = " + _triggerFrequency);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    public enum CameraName
    {
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="CameraTop")]
        CameraTop = 0,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="CameraSide")]
        CameraSide = 1,
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class SpinnakerSettings
    {
    
        private CameraName _cameraName = RigConfiguration.CameraName.CameraTop;
    
        private CameraTriggerName _triggerName;
    
        private double _exposureTime = 15000D;
    
        private string _serialNumber = "00000";
    
        private double _gain = 1D;
    
        private int _binning = 1;
    
        public SpinnakerSettings()
        {
        }
    
        protected SpinnakerSettings(SpinnakerSettings other)
        {
            _cameraName = other._cameraName;
            _triggerName = other._triggerName;
            _exposureTime = other._exposureTime;
            _serialNumber = other._serialNumber;
            _gain = other._gain;
            _binning = other._binning;
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="cameraName")]
        public CameraName CameraName
        {
            get
            {
                return _cameraName;
            }
            set
            {
                _cameraName = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="triggerName")]
        public CameraTriggerName TriggerName
        {
            get
            {
                return _triggerName;
            }
            set
            {
                _triggerName = value;
            }
        }
    
        /// <summary>
        /// The exposure time for the camera (in microseconds)
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="exposureTime")]
        [System.ComponentModel.DescriptionAttribute("The exposure time for the camera (in microseconds)")]
        public double ExposureTime
        {
            get
            {
                return _exposureTime;
            }
            set
            {
                _exposureTime = value;
            }
        }
    
        /// <summary>
        /// The serial number of the camera
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="serialNumber")]
        [System.ComponentModel.DescriptionAttribute("The serial number of the camera")]
        public string SerialNumber
        {
            get
            {
                return _serialNumber;
            }
            set
            {
                _serialNumber = value;
            }
        }
    
        /// <summary>
        /// The camera gain
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="gain")]
        [System.ComponentModel.DescriptionAttribute("The camera gain")]
        public double Gain
        {
            get
            {
                return _gain;
            }
            set
            {
                _gain = value;
            }
        }
    
        /// <summary>
        /// The binning setting for the camera
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="binning")]
        [System.ComponentModel.DescriptionAttribute("The binning setting for the camera")]
        public int Binning
        {
            get
            {
                return _binning;
            }
            set
            {
                _binning = value;
            }
        }
    
        public System.IObservable<SpinnakerSettings> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new SpinnakerSettings(this)));
        }
    
        public System.IObservable<SpinnakerSettings> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new SpinnakerSettings(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("cameraName = " + _cameraName + ", ");
            stringBuilder.Append("triggerName = " + _triggerName + ", ");
            stringBuilder.Append("exposureTime = " + _exposureTime + ", ");
            stringBuilder.Append("serialNumber = " + _serialNumber + ", ");
            stringBuilder.Append("gain = " + _gain + ", ");
            stringBuilder.Append("binning = " + _binning);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class MechanicalLoom
    {
    
        private string _portName = "COM9";
    
        private int _id = 0;
    
        private int _homeVelocity = 200;
    
        private int _bottomPosition = 3000;
    
        private double _bottomPauseTimeSeconds = 1D;
    
        private int _dropAcceleration = 18000;
    
        private int _dropMaxVelocity = 10000;
    
        public MechanicalLoom()
        {
        }
    
        protected MechanicalLoom(MechanicalLoom other)
        {
            _portName = other._portName;
            _id = other._id;
            _homeVelocity = other._homeVelocity;
            _bottomPosition = other._bottomPosition;
            _bottomPauseTimeSeconds = other._bottomPauseTimeSeconds;
            _dropAcceleration = other._dropAcceleration;
            _dropMaxVelocity = other._dropMaxVelocity;
        }
    
        /// <summary>
        /// The COM port for the timestamp generator board
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="portName")]
        [System.ComponentModel.DescriptionAttribute("The COM port for the timestamp generator board")]
        public string PortName
        {
            get
            {
                return _portName;
            }
            set
            {
                _portName = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="id")]
        public int Id
        {
            get
            {
                return _id;
            }
            set
            {
                _id = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="homeVelocity")]
        public int HomeVelocity
        {
            get
            {
                return _homeVelocity;
            }
            set
            {
                _homeVelocity = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="bottomPosition")]
        public int BottomPosition
        {
            get
            {
                return _bottomPosition;
            }
            set
            {
                _bottomPosition = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="bottomPauseTimeSeconds")]
        public double BottomPauseTimeSeconds
        {
            get
            {
                return _bottomPauseTimeSeconds;
            }
            set
            {
                _bottomPauseTimeSeconds = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="dropAcceleration")]
        public int DropAcceleration
        {
            get
            {
                return _dropAcceleration;
            }
            set
            {
                _dropAcceleration = value;
            }
        }
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="dropMaxVelocity")]
        public int DropMaxVelocity
        {
            get
            {
                return _dropMaxVelocity;
            }
            set
            {
                _dropMaxVelocity = value;
            }
        }
    
        public System.IObservable<MechanicalLoom> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new MechanicalLoom(this)));
        }
    
        public System.IObservable<MechanicalLoom> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new MechanicalLoom(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("portName = " + _portName + ", ");
            stringBuilder.Append("id = " + _id + ", ");
            stringBuilder.Append("homeVelocity = " + _homeVelocity + ", ");
            stringBuilder.Append("bottomPosition = " + _bottomPosition + ", ");
            stringBuilder.Append("bottomPauseTimeSeconds = " + _bottomPauseTimeSeconds + ", ");
            stringBuilder.Append("dropAcceleration = " + _dropAcceleration + ", ");
            stringBuilder.Append("dropMaxVelocity = " + _dropMaxVelocity);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    public enum LoomAction
    {
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Drop")]
        Drop = 0,
    
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="Home")]
        Home = 1,
    }


    /// <summary>
    /// Describes the hardware and tracking configuration for the rig
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [System.ComponentModel.DescriptionAttribute("Describes the hardware and tracking configuration for the rig")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class RigConfig
    {
    
        private ClockSynchronizer _clockSynchronizer;
    
        private CameraController _cameraController;
    
        private System.Collections.Generic.List<SpinnakerSettings> _cameras = new System.Collections.Generic.List<SpinnakerSettings>();
    
        private System.Collections.Generic.List<MechanicalLoom> _looms = new System.Collections.Generic.List<MechanicalLoom>();
    
        public RigConfig()
        {
        }
    
        protected RigConfig(RigConfig other)
        {
            _clockSynchronizer = other._clockSynchronizer;
            _cameraController = other._cameraController;
            _cameras = other._cameras;
            _looms = other._looms;
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="clockSynchronizer")]
        public ClockSynchronizer ClockSynchronizer
        {
            get
            {
                return _clockSynchronizer;
            }
            set
            {
                _clockSynchronizer = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="cameraController")]
        public CameraController CameraController
        {
            get
            {
                return _cameraController;
            }
            set
            {
                _cameraController = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="cameras")]
        public System.Collections.Generic.List<SpinnakerSettings> Cameras
        {
            get
            {
                return _cameras;
            }
            set
            {
                _cameras = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="looms")]
        public System.Collections.Generic.List<MechanicalLoom> Looms
        {
            get
            {
                return _looms;
            }
            set
            {
                _looms = value;
            }
        }
    
        public System.IObservable<RigConfig> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new RigConfig(this)));
        }
    
        public System.IObservable<RigConfig> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new RigConfig(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("clockSynchronizer = " + _clockSynchronizer + ", ");
            stringBuilder.Append("cameraController = " + _cameraController + ", ");
            stringBuilder.Append("cameras = " + _cameras + ", ");
            stringBuilder.Append("looms = " + _looms);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class ClockSynchronizer
    {
    
        private ClockSynchronizerName _deviceName;
    
        private string _portName = "COM9";
    
        public ClockSynchronizer()
        {
        }
    
        protected ClockSynchronizer(ClockSynchronizer other)
        {
            _deviceName = other._deviceName;
            _portName = other._portName;
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="deviceName")]
        public ClockSynchronizerName DeviceName
        {
            get
            {
                return _deviceName;
            }
            set
            {
                _deviceName = value;
            }
        }
    
        /// <summary>
        /// The COM port for the timestamp generator board
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="portName")]
        [System.ComponentModel.DescriptionAttribute("The COM port for the timestamp generator board")]
        public string PortName
        {
            get
            {
                return _portName;
            }
            set
            {
                _portName = value;
            }
        }
    
        public System.IObservable<ClockSynchronizer> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new ClockSynchronizer(this)));
        }
    
        public System.IObservable<ClockSynchronizer> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new ClockSynchronizer(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("deviceName = " + _deviceName + ", ");
            stringBuilder.Append("portName = " + _portName);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Source)]
    public partial class CameraController
    {
    
        private CameraControllerName _deviceName;
    
        private string _portName = "COM7";
    
        private System.Collections.Generic.List<CameraTriggerSource> _triggers = new System.Collections.Generic.List<CameraTriggerSource>();
    
        public CameraController()
        {
        }
    
        protected CameraController(CameraController other)
        {
            _deviceName = other._deviceName;
            _portName = other._portName;
            _triggers = other._triggers;
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="deviceName")]
        public CameraControllerName DeviceName
        {
            get
            {
                return _deviceName;
            }
            set
            {
                _deviceName = value;
            }
        }
    
        /// <summary>
        /// The COM port for the camera controller board
        /// </summary>
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="portName")]
        [System.ComponentModel.DescriptionAttribute("The COM port for the camera controller board")]
        public string PortName
        {
            get
            {
                return _portName;
            }
            set
            {
                _portName = value;
            }
        }
    
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [YamlDotNet.Serialization.YamlMemberAttribute(Alias="triggers")]
        public System.Collections.Generic.List<CameraTriggerSource> Triggers
        {
            get
            {
                return _triggers;
            }
            set
            {
                _triggers = value;
            }
        }
    
        public System.IObservable<CameraController> Process()
        {
            return System.Reactive.Linq.Observable.Defer(() => System.Reactive.Linq.Observable.Return(new CameraController(this)));
        }
    
        public System.IObservable<CameraController> Process<TSource>(System.IObservable<TSource> source)
        {
            return System.Reactive.Linq.Observable.Select(source, _ => new CameraController(this));
        }
    
        protected virtual bool PrintMembers(System.Text.StringBuilder stringBuilder)
        {
            stringBuilder.Append("deviceName = " + _deviceName + ", ");
            stringBuilder.Append("portName = " + _portName + ", ");
            stringBuilder.Append("triggers = " + _triggers);
            return true;
        }
    
        public override string ToString()
        {
            System.Text.StringBuilder stringBuilder = new System.Text.StringBuilder();
            stringBuilder.Append(GetType().Name);
            stringBuilder.Append(" { ");
            if (PrintMembers(stringBuilder))
            {
                stringBuilder.Append(" ");
            }
            stringBuilder.Append("}");
            return stringBuilder.ToString();
        }
    }


    /// <summary>
    /// Serializes a sequence of data model objects into YAML strings.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [System.ComponentModel.DescriptionAttribute("Serializes a sequence of data model objects into YAML strings.")]
    [Bonsai.CombinatorAttribute()]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Transform)]
    public partial class SerializeToYaml
    {
    
        private System.IObservable<string> Process<T>(System.IObservable<T> source)
        {
            return System.Reactive.Linq.Observable.Defer(() =>
            {
                var serializer = new YamlDotNet.Serialization.SerializerBuilder()
                    .Build();
                return System.Reactive.Linq.Observable.Select(source, value => serializer.Serialize(value)); 
            });
        }

        public System.IObservable<string> Process(System.IObservable<LoomTrigger> source)
        {
            return Process<LoomTrigger>(source);
        }

        public System.IObservable<string> Process(System.IObservable<CameraTriggerSource> source)
        {
            return Process<CameraTriggerSource>(source);
        }

        public System.IObservable<string> Process(System.IObservable<SpinnakerSettings> source)
        {
            return Process<SpinnakerSettings>(source);
        }

        public System.IObservable<string> Process(System.IObservable<MechanicalLoom> source)
        {
            return Process<MechanicalLoom>(source);
        }

        public System.IObservable<string> Process(System.IObservable<RigConfig> source)
        {
            return Process<RigConfig>(source);
        }

        public System.IObservable<string> Process(System.IObservable<ClockSynchronizer> source)
        {
            return Process<ClockSynchronizer>(source);
        }

        public System.IObservable<string> Process(System.IObservable<CameraController> source)
        {
            return Process<CameraController>(source);
        }
    }


    /// <summary>
    /// Deserializes a sequence of YAML strings into data model objects.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Bonsai.Sgen", "0.4.0.0 (YamlDotNet v13.0.0.0)")]
    [System.ComponentModel.DescriptionAttribute("Deserializes a sequence of YAML strings into data model objects.")]
    [System.ComponentModel.DefaultPropertyAttribute("Type")]
    [Bonsai.WorkflowElementCategoryAttribute(Bonsai.ElementCategory.Transform)]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<LoomTrigger>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<CameraTriggerSource>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<SpinnakerSettings>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<MechanicalLoom>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<RigConfig>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<ClockSynchronizer>))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Bonsai.Expressions.TypeMapping<CameraController>))]
    public partial class DeserializeFromYaml : Bonsai.Expressions.SingleArgumentExpressionBuilder
    {
    
        public DeserializeFromYaml()
        {
            Type = new Bonsai.Expressions.TypeMapping<RigConfig>();
        }

        public Bonsai.Expressions.TypeMapping Type { get; set; }

        public override System.Linq.Expressions.Expression Build(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression> arguments)
        {
            var typeMapping = (Bonsai.Expressions.TypeMapping)Type;
            var returnType = typeMapping.GetType().GetGenericArguments()[0];
            return System.Linq.Expressions.Expression.Call(
                typeof(DeserializeFromYaml),
                "Process",
                new System.Type[] { returnType },
                System.Linq.Enumerable.Single(arguments));
        }

        private static System.IObservable<T> Process<T>(System.IObservable<string> source)
        {
            return System.Reactive.Linq.Observable.Defer(() =>
            {
                var serializer = new YamlDotNet.Serialization.DeserializerBuilder()
                    .Build();
                return System.Reactive.Linq.Observable.Select(source, value =>
                {
                    var reader = new System.IO.StringReader(value);
                    var parser = new YamlDotNet.Core.MergingParser(new YamlDotNet.Core.Parser(reader));
                    return serializer.Deserialize<T>(parser);
                });
            });
        }
    }
}